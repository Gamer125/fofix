#summary How to run FoFiX under GNU/Linux
#labels Phase-Deployment
<wiki:toc max_depth="2" />
= Introduction =
The following provides instructions to get FoFiX running on (hopefully) any (modern?) GNU/Linux distribution.

Comments and suggestions are always welcome.

*Note:* In all places where the python interpreter is called, `python` can be replaced by a specific version _e.g._ `python2.5`. Remember that if you do it once, you'll have to do it everywhere.

=Getting FoFiX=
You are required to have the {{{svn}}} client.
  # Open a terminal
  # Change to the directory in which you want to have FoFiX
  # Execute one of the following depending on the version you want:
    # Stable: {{{svn checkout http://fofix.googlecode.com/svn/MFH-Mod/tags/Release_3.100 fofix-3.100}}}
    # Testing: {{{svn checkout http://fofix.googlecode.com/svn/MFH-Mod/tags/Release_3.120_rc1 fofix-3.120~rc1}}}
    # Unstable: {{{svn checkout http://fofix.googlecode.com/svn/MFH-Mod/trunk/ fofix-svn}}}

_It is highly recommended that when you use the unstable version (when you become an Alpha tester), you keep a separate FoFiX folder containing a full install of the latest stable release - as the Alpha versions' new features and bugfixes might cause other issues affecting playability._

_Alternatively, be familiar with your svn clients method of rolling back to previous revisions so you can downgrade to a working revision if the latest one breaks on you e.g. at the commandline, you may use {{{svn up -r<revision_number>}}} to rollback to the specified version._

= Generic instructions =
The following gives instructions that should work on most GNU/Linux distributions. If there are specific instructions for your distribution, you may want to have a look at that section instead of this one.
 
== Install dependencies ==
You need to install these packages:
  * Python (tested with 2.4 and 2.5)
  * pygame (>= 1.9 required for 64bit CPUs)
  * PyOpenGL (2.x is recommanded as it's much faster than 3.x for most users)
  * NumPy
  * (Python) Numeric
  * Python Imaging Library (PIL)
  * PyOgg
  * PyVorbis
  * PySqlite2
  * PyXML

Optionally, if you are in 32bit you can also install Psyco.

=== Getting and installing pygame 1.9.1 ===
{{{
wget http://www.pygame.org/ftp/pygame-1.9.1release.tar.gz
tar xvf pygame-1.9.1release.tar.gz
cd pygame-1.9.1release/
sudo python2.5 setup.py
}}}

=== Optional Voice Support ===
  # Build pyaudio.
  # Build pypitch.

_Detailed instructions still to come._

=== Optional PitchBending ===
==== Requirements ====
In order to build John Stumpo's pitchbend module you first need to install...
  * libsdl-mixer1.2-dev
  * libsndobj-dev

==== Compiling ====
  # Get the source code: {{{svn co https://svn.stump.jstump.com/svnroot/pitchbend/trunk pitchbend}}}
  # Move to the source folder: {{{cd pitchbend}}}
  # Create an empty VERSION file: {{{touch VERSION}}}
  # Build the library: {{{python setup.py build}}}
  # Optionally you can install it: {{{sudo python setup.py install}}}

= Distribution-specific instructions =
If your distribution is not listed here and you got FoFiX to work, please create a wishlist item on our issues tracker to share the required procedure.

== Debian and Ubuntu ==
Execute the following as root to install the dependencies:
{{{
apt-get install python-pygame python-opengl python-numpy python-imaging python-ogg python-pyvorbis python-pysqlite2 python-xml python2.5-dev
}}}

Notes:
  * *If you are running in a 64bit environment, pygame >= 1.9 is required*. You'll need to build it yourself (See [#Getting_and_installing_pygame_1.9.1]). Note that you don't have to install it, you can use the PYTHONPATH environment variable to point python to your pygame library (see below for an example).

  * Under Debian unstable, make sure you have python-pyvorbis 1.3 or >= 1.4-2 but not 1.4-1. The latter crashes with a double free error.

  * Under Ubuntu, make sure you use python2.5 all over the place.

= Links to your songs and themes =
You may very well use symbolic links to point to your songs and themes.
That prevents you from having to copy your files over and over.
Here are two examples:
{{{
ln -s ~/games/FoFiX/data/songs/ ~/games/fofix-3.120~rc1/data/songs
ln -s ~/games/FoFiX/data/themes/RB2\ Spanish ~/games/fofix-3.120~rc1/data/themes/RB2\ Spanish
}}}

= Running the game =
  # Change directory to the `src` folder of your FoFiX directory _e.g._ `~/fofix-svn/src`.
  # Execute {{{python FoFiX.py}}}

*Note:* If you are using custom built but not installed libraries, use the PYTHONPATH environment variable _e.g._
{{{
PYTHONPATH=~/pygame-1.9.1release/build/lib.linux-x86_64-2.5:~/pyaudio/build/lib.linux-x86_64-2.5 python FoFiX.py
}}}